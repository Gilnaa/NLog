#!/usr/bin/env python

import binascii
import os
import subprocess
from nlog_scripts import gen_id

def scrub(target, source, env):
    for object_file, dict_file in zip(source, target):
        print subprocess.check_output(['nlog_scripts/scrub.py', object_file.name, dict_file.name])

def wrap_builder(bld):
    def build_with_nlog(target, source, env):
        env.Replace(CPPDEFINES='NLOG_OBJECT_ID=%08x' % gen_id.get_id_by_name(source[0].abspath))
        bld.action(target, source, env)

    return Builder(action = build_with_nlog,
                   suffix = bld.suffix,
                   source_scanner = bld.source_scanner,
                   src_suffix = bld.src_suffix)

env = Environment()

env['BUILDERS']['Object'] = wrap_builder(env['BUILDERS']['Object'])
nlog_builder = Builder(action=scrub)
env.Append(BUILDERS = {'NLog': nlog_builder})
env.Program(target='nlog', source=['main.cpp'], CPPPATH=['../include/'])
env.NLog(target='nlog-dict', source=['nlog'])